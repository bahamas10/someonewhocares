#!/usr/bin/env bash
#
# Pull and install the latest host file
# from someonewhocares.org (Dan Pollock)
#
# Author: Dave Eddy <dave@daveeddy.com>
# Date: 11/24/13
# License: MIT

usage() {
	local prog=${0##*/}
	cat <<-EOF
	usage: $prog [options]

	pull and install the latest host file from someonewhocares.org

	options
	  -h           print this message and exit
	  -t <type>    the host file type to pull, can be [ipv6, zero], leave blank for default
	  -u           uninstall the host file by replacing it with a default template
	EOF
}

# replace the host file with a basic default template
uninstall() {
	local default=$(cat <<-EOF
	# replaced by ${0##*/} on $(date)
	127.0.0.1	localhost
	255.255.255.255	broadcasthost
	::1             localhost
	fe80::1%lo0	localhost
	EOF)
	echo '> replacing host file'
	_install <<< "$default" || return 1
	echo '> done'
}

# install a host file into place taken over stdin
_install() {
	local hosts=$(cat)
	tee /etc/hosts <<< "$hosts" > /dev/null && return
	echo '> failed - retrying with sudo' >&2
	sudo tee /etc/hosts <<< "$hosts" > /dev/null && return
	echo '> failed with sudo - giving up' >&2
	return 1
}

_type=
while getopts 'ht:u' option; do
	case "$option" in
		h) usage; exit 0;;
		t) _type=$OPTARG;;
		u) uninstall; exit $?;;
		*) usage >&2; exit 1;;
	esac
done
shift "$((OPTIND - 1))"

url=http://someonewhocares.org/hosts/$_type/hosts

# get host file
echo -n "> pulling latest host file from $url... "
if ! hosts=$(curl -LsS "$url"); then
	echo 'failed!' >&2
	exit 1
fi
echo 'done'

# validate host file
echo -n '> validating host file... '
validips=(
    127.0.0.1
    0.0.0.0
    255.255.255.255
    ::1
    fe80::1%lo
    fe00::0
    ff00::0
    ff02::1
    ff02::2
    ff02::3
)
IFS='|'; grep="${validips[*]}"; grep="^(${grep//\./\\.})$"; unset IFS
if awk '$0 !~ /^[ \t]*#|^[ \t]*$/ { print $1 }' <<< "$hosts" |\
   grep -Ev "$grep"; then
	echo 'failed!' >&2
	exit 2
fi
echo 'passed'

# install host file
echo '> installing new host file'
_install <<< "$hosts" || exit $?

echo "> finished! $(grep 'Last updated: ' <<< "$hosts")"
